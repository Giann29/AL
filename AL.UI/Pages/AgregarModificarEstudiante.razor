@page "/nuevo-estudiante/{Id:int?}"
@inject IJSRuntime JsRuntime
@inject NavigationManager Navegador;
@inject AgregarEstudianteUseCase AgregarEstudianteUseCase
@inject GetEstudianteUseCase GetEstudianteUseCase
@inject ModificarEstudianteUseCase ModificarEstudianteUseCase
@inject EliminarEstudianteUseCase EliminarEstudianteUseCase
@if (_esNuevoEstudiante)
{
    <PageTitle>Agregando Estudiante</PageTitle>
    <h3>Agregando un nuevo Estudiante</h3>
    <input placeholder="Nombre" @bind="_estudiante.Nombre" class="form-control">
    <input placeholder="Apellido" @bind="_estudiante.Apellido" class="form-control">
    <input placeholder="123456789" @bind="_estudiante.DNI" class="form-control">
    <input type="email" placeholder="Email" @bind="_estudiante.Email" class="form-control">
    <button class="botonlindo" @onclick="()=>Aceptar()">Aceptar</button>
    <button class="btn btn-outline-danger" @onclick="()=>Volver()">Cancelar</button>
}
else
{
    <PageTitle>Modificando Estudiante</PageTitle>
    <h3>Modificando al Estudiante "@_estudiante.Nombre" "@_estudiante.Apellido"</h3>
    <input placeholder="Nombre" @bind="_estudiante.Nombre" class="form-control">
    <input placeholder="Apellido" @bind="_estudiante.Apellido" class="form-control">
    <input placeholder="DNI" @bind="_estudiante.DNI" class="form-control">
    <input type="email" placeholder="Email" @bind="_estudiante.Email" class="form-control">
    <button class="botonlindo" @onclick="()=>Aceptar()">Aceptar</button>
    <button class="btn btn-outline-danger" @onclick="()=>Volver()">Cancelar</button>
    <button class="botonmalo" @onclick="()=>Eliminar()">Eliminar</button>
}
@code {
    Estudiante _estudiante = new Estudiante();
    [Parameter] public int? Id { get; set; }
    bool _esNuevoEstudiante = true;
    async Task Eliminar()
    {
        bool confirmado = await JsRuntime.InvokeAsync<bool>("confirm", $"Desea eliminar a el Estudiante?");
        if (confirmado && Id != null)
        {
            EliminarEstudianteUseCase.Ejecutar(Id.Value);
            Navegador.NavigateTo("estudiantes");
        }
    }
    protected override void OnParametersSet()
    {
        if (Id != null)
        {
            var estudiante_hallado = GetEstudianteUseCase.Ejecutar(Id.Value);
            if (estudiante_hallado != null)
            {
                _estudiante = estudiante_hallado;
                _esNuevoEstudiante = false;
            }
        }
    }
    void Aceptar()
    {
        if (_esNuevoEstudiante)
        {
            AgregarEstudianteUseCase.Ejecutar(_estudiante);
        }
        else
        {
            ModificarEstudianteUseCase.Ejecutar(_estudiante);
        }
        _estudiante = new Estudiante();
        Navegador.NavigateTo("estudiantes");
    }
    void Volver()
    {
        Navegador.NavigateTo("/estudiantes");
    }
}